<?xml version="1.0"?>
<ruleset name="ModernTribe">
    <description>Modern Tribe Coding Standards.</description>
    <file>./wp-content/plugins/core</file>
    <file>./wp-content/themes/core</file>
    <!-- Headless - <file>./wp-content/themes/core</file> -->
    <arg name="extensions" value="php"/>
    <arg name="severity" value="4"/>
    <arg name="tab-width" value="4"/>

    <!--  Update to the PHP version your production/local docker container runs on -->
    <config name="testVersion" value="7.4"/>
    <!-- php -r 'echo PHP_VERSION_ID;' -->
    <config name="php_version" value="70407"/>

    <!-- Exclude files -->
    <exclude-pattern>*-config.php</exclude-pattern>
    <exclude-pattern>*assets/</exclude-pattern>
    <exclude-pattern>*vendor/</exclude-pattern>
    <exclude-pattern>*tests/*</exclude-pattern>
    <exclude-pattern>extensions\/(?!twig).*</exclude-pattern>
    <exclude-pattern>*webpack/</exclude-pattern>

    <!-- Rules -->

    <!-- PSR2 -->
    <rule ref="PSR2">
        <exclude name="Generic.WhiteSpace.DisallowTabIndent"/>
        <exclude name="Generic.Files.LineLength.TooLong"/>
        <exclude name="PSR1.Files.SideEffects.FoundWithSymbols"/>
        <exclude name="PSR1.Methods.CamelCapsMethodName.NotCamelCaps"/>
        <exclude name="PSR2.Methods.FunctionCallSignature.SpaceAfterOpenBracket"/>
        <exclude name="PSR2.Methods.FunctionCallSignature.SpaceBeforeCloseBracket"/>
        <exclude name="PSR2.Classes.ClassDeclaration.OpenBraceNewLine"/>
        <exclude name="PSR2.Classes.ClassDeclaration.CloseBraceAfterBody"/>
        <exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace"/>
        <exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpaceBeforeCloseBrace"/>
        <exclude name="Squiz.Classes.ValidClassName.NotCamelCaps"/>
        <exclude name="Squiz.ControlStructures.ForEachLoopDeclaration.SpaceAfterOpen"/>
        <exclude name="Squiz.ControlStructures.ControlSignature.SpaceAfterCloseBrace"/>
        <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingAfterOpen"/>
        <exclude name="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose"/>
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.BraceOnSameLine"/>
        <exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingAfterOpen"/>
        <exclude name="Squiz.WhiteSpace.ControlStructureSpacing.SpacingBeforeClose"/>
    </rule>

    <!-- PSR12 -->
    <rule ref="PSR12.Files.DeclareStatement"/>

    <!-- Function spacing -->
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="requiredSpacesAfterOpen" value="1"/>
            <property name="requiredSpacesBeforeClose" value="1"/>
        </properties>
        <severity>0</severity>
    </rule>

    <!-- Now that we've excluded all message codes from FunctionCallSignature,
         re-enable the two codes that we actually want. This will change the severity
         of these codes from 0 (set by the above rule) to the default value (5). -->
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceAfterOpenBracket" />
    <rule ref="PEAR.Functions.FunctionCallSignature.SpaceBeforeCloseBracket" />

    <!-- WordPress -->
    <rule ref="WordPress.Arrays.MultipleStatementAlignment.DoubleArrowNotAligned"/>
    <rule ref="WordPress.WhiteSpace.OperatorSpacing"/>
    <rule ref="WordPress.Arrays.ArrayKeySpacingRestrictions"/>
    <rule ref="WordPressVIPMinimum">
        <severity>3</severity>
        <exclude name="WordPressVIPMinimum.Constants.ConstantString.NotCheckingConstantName"/>
        <exclude name="WordPressVIPMinimum.Variables.VariableAnalysis"/>
    </rule>

    <!-- Generic -->
    <rule ref="Generic.Functions.OpeningFunctionBraceKernighanRitchie"/>
    <rule ref="Generic.Classes.OpeningBraceSameLine"/>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax.Found"/>
    <rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
    <rule ref="Generic.WhiteSpace.DisallowSpaceIndent"/>
    <rule ref="Generic.Formatting.MultipleStatementAlignment"/>
    <rule ref="Generic.Files.EndFileNewline"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4"/>
            <property name="tabIndent" value="true"/>
        </properties>
    </rule>
    <rule ref="Generic.VersionControl.GitMergeConflict"/>

    <!-- Slevomat -->
    <rule ref="SlevomatCodingStandard.TypeHints.UselessConstantTypeHint"/>
    <rule ref="SlevomatCodingStandard.Exceptions.ReferenceThrowableOnly"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceOperator"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.RequireNullCoalesceEqualOperator"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.EarlyExit"/>
    <rule ref="SlevomatCodingStandard.Functions.StaticClosure"/>
    <rule ref="SlevomatCodingStandard.Functions.UselessParameterDefaultValue"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UselessAlias"/>
    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses"/>
    <rule ref="SlevomatCodingStandard.PHP.UselessSemicolon"/>
    <rule ref="SlevomatCodingStandard.Variables.DuplicateAssignmentToVariable"/>
    <rule ref="SlevomatCodingStandard.Variables.UnusedVariable"/>
    <rule ref="SlevomatCodingStandard.Variables.UselessVariable"/>
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>
    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.LanguageConstructWithParentheses"/>
    <rule ref="SlevomatCodingStandard.Functions.RequireSingleLineCall"/>
    <rule ref="SlevomatCodingStandard.Namespaces.NamespaceDeclaration"/>
    <rule ref="SlevomatCodingStandard.Classes.ClassConstantVisibility"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.TypeHints.NullableTypeForNullDefaultValue"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.Commenting.UselessInheritDocComment"/>
    <rule ref="SlevomatCodingStandard.Arrays.DisallowImplicitArrayCreation"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowContinueWithoutIntegerOperandInSwitch"/>
    <rule ref="SlevomatCodingStandard.Operators.DisallowEqualOperators"/>
    <rule ref="SlevomatCodingStandard.PHP.TypeCast"/>
    <rule ref="SlevomatCodingStandard.Arrays.SingleLineArrayWhitespace" >
        <properties>
            <property name="spacesAroundBrackets" value="1"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.Namespaces.UseSpacing">
        <properties>
            <property name="linesCountBeforeFirstUse" value="1"/>
            <property name="linesCountBetweenUseTypes" value="1"/>
            <property name="linesCountAfterLastUse" value="1"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="spacesCountAroundEqualsSign" value="0"/>
            <property name="declareOnFirstLine" value="1"/>
            <property name="linesCountAfterDeclare" value="0"/>
        </properties>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ReturnTypeHint.UselessAnnotation"/>
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.PropertyTypeHint"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHint">
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingTraversableTypeHintSpecification"/>
        <exclude name="SlevomatCodingStandard.TypeHints.ParameterTypeHint.UselessAnnotation"/>
    </rule>
</ruleset>
